name: build-tests

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]

jobs:
  build-and-test:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      PYTHON_VERSION: "3.11"
      DTCC_DATA_ROOT: ${{ github.workspace }}/data
      EMBREE_VERSION: "4.3.1"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Upgrade pip and install build helpers
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools ninja pytest

      - name: Fetch Embree source
        shell: bash
        run: |
          set -euxo pipefail
          git clone --depth 1 --branch "v${EMBREE_VERSION}" https://github.com/embree/embree.git "$RUNNER_TEMP/embree-src"
          echo "EMBREE_SOURCE_DIR=$RUNNER_TEMP/embree-src" >> "$GITHUB_ENV"

      - name: Build Embree (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euxo pipefail
          EMBREE_BUILD_DIR="$RUNNER_TEMP/embree-build"
          EMBREE_INSTALL_DIR="$RUNNER_TEMP/embree-install"
          cmake -S "$EMBREE_SOURCE_DIR" -B "$EMBREE_BUILD_DIR" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$EMBREE_INSTALL_DIR" \
            -DEMBREE_TUTORIALS=OFF \
            -DEMBREE_ISPC_SUPPORT=OFF \
            -DEMBREE_TASKING_SYSTEM=INTERNAL
          cmake --build "$EMBREE_BUILD_DIR" --config Release --target install --parallel
          EMBREE_CONFIG=$(find "$EMBREE_INSTALL_DIR" -name embree-config.cmake -print -quit)
          if [ -z "$EMBREE_CONFIG" ]; then
            echo "embree-config.cmake not found" >&2
            exit 1
          fi
          EMBREE_DIR=$(dirname "$EMBREE_CONFIG")
          echo "embree_DIR=$EMBREE_DIR" >> "$GITHUB_ENV"
          echo "CMAKE_ARGS=-Dembree_DIR=$EMBREE_DIR" >> "$GITHUB_ENV"
          LIB_DIR=$(cd "$(dirname "$EMBREE_CONFIG")/../.." && pwd)
          if [ -d "$LIB_DIR" ]; then
            if [ "${{ runner.os }}" = "Linux" ]; then
              echo "LD_LIBRARY_PATH=$LIB_DIR:${LD_LIBRARY_PATH:-}" >> "$GITHUB_ENV"
            else
              echo "DYLD_LIBRARY_PATH=$LIB_DIR:${DYLD_LIBRARY_PATH:-}" >> "$GITHUB_ENV"
            fi
          fi

      - name: Build Embree (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $buildDir = Join-Path $env:RUNNER_TEMP 'embree-build'
          $installDir = Join-Path $env:RUNNER_TEMP 'embree-install'
          cmake -S $env:EMBREE_SOURCE_DIR -B $buildDir -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_INSTALL_PREFIX=$installDir `
            -DEMBREE_TUTORIALS=OFF `
            -DEMBREE_ISPC_SUPPORT=OFF `
            -DEMBREE_TASKING_SYSTEM=INTERNAL
          cmake --build $buildDir --config Release --target INSTALL
          $configPath = Get-ChildItem -Path $installDir -Filter 'embree-config.cmake' -Recurse | Select-Object -First 1
          if (-not $configPath) { throw 'embree-config.cmake not found' }
          $embreeDir = $configPath.Directory.FullName
          Add-Content $env:GITHUB_ENV "embree_DIR=$embreeDir"
          Add-Content $env:GITHUB_ENV "CMAKE_ARGS=-Dembree_DIR=$embreeDir"
          $dllDir = $configPath.Directory.Parent.Parent.FullName + '\\bin'
          if (Test-Path $dllDir) {
            Add-Content $env:GITHUB_ENV "PATH=$dllDir;$env:PATH"
          }

      - name: Install project
        run: |
          python -m pip install .

      - name: Run tests
        working-directory: tests
        run: |
          pytest
